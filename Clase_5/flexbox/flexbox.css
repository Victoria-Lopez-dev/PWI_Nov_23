
.contenedor{
    background-color: lightblue;
    border: 2px solid blue;
    height: 600px;
    width: 600px;
    display:flex;/* siempre en elemento padre para que afecte a sus hijos y aplicar las propiedades de flexbox*/

    flex-direction: row;/* permite indicar la direccion de los hijos ( fila o una columna)*/

    justify-content:center;
    /* alinea a los elementos hijos horizontal(row) */
    /*alinea a los elementos hijos vertical (column)*/
    /* center |flex-start | flex-end | space-between |space-evenly |space-around */
    align-items:center ;
    /* alinea a los elementos hijos vertical(row) 
    alinea a los elementos hijos horizontal (column)
    center | end |start |streach
    */

    flex-wrap: nowrap;
    /* prevalece el tamaño de los elementos hijos(wrap)
    ancho del contenedor padre es mas pequeño que el ancho total de todos mis elementos hijos, "empuja" los que sobran hacia abajo*/
    padding-right: 20px;
    padding-left: 20px;
    gap: 20px; 
    
}
.tarjeta{
    width: 200px;
    height: fit-content;
    border: 2px solid violet;
    background-color: pink;
    /* margin-right: 80px; */
    display: flex;
    flex-direction: column;
    align-items: center;
}

#dos{
    background-color: greenyellow;
    align-self: end;/* asignar a un elemento hijo que se comporte distinto a sus hermanos (vertical -row | horizontal - column) aplicar align-items pero de manera particular al elemento hijo*/
    /* justify-self */
}
/* #tres{
    margin-bottom: 50px;
} */
img{
    width: 100%;
}
h1{
    background-color: red;
    width: 120px;
}
h2{
    background-color: red;
}
p{
    text-align: center;
}
/*
elementos en linea y en bloque
en bloque -> no permite que otros elementos se coloquen al lado
en linea-> ocupa solamente el espacio que necesita,permitiendo que otros elementos puedan colocarse al lado
*/